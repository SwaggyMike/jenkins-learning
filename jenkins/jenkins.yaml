jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  labelAtoms:
  - name: "built-in"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  nodeMonitors:
  - "architecture"
  - "clock"
  - diskSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "swapSpace"
  - tmpSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "responseTime"
  numExecutors: 2
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "${ADMIN_USER}"
        name: "${ADMIN_USER}"
        password: "${ADMIN_PASSWORD}"
        properties:
        - "consoleUrlProvider"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - "experimentalFlags"
        - mailer:
            emailAddress: "admin@admin.com"
        - "apiToken"
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
jobs:
  - script: >
      pipelineJob('ParameterizedJob') {
          parameters {
              stringParam('NAME', 'Default Name', 'Enter your name:')
              booleanParam('ENABLE_FEATURE', false, 'Enable feature:')
              choiceParam('CHOICE', ['Option 1', 'Option 2', 'Option 3'], 'Select an option:')
          }
          definition {
              cps {
                  script('''
                      pipeline {
                          agent any
                          parameters {
                              string(name: 'NAME', defaultValue: 'Default Name', description: 'Enter your name:')
                              booleanParam(name: 'ENABLE_FEATURE', defaultValue: false, description: 'Enable feature:')
                              choice(name: 'CHOICE', choices: ['Option 1', 'Option 2', 'Option 3'], description: 'Select an option:')
                          }
                          stages {
                              stage('Parameters') {
                                  steps {
                                      echo "Hello, ${params.NAME}!"
                                      echo "Feature enabled: ${params.ENABLE_FEATURE}"
                                      echo "Selected option: ${params.CHOICE}"
                                  }
                              }
                          }
                      }
                  ''')
              }
          }
      }
